@using Models;
@using FreezeDownTimer.Helpers;
@model FreezeDownTimer.Models.UserViewModel

@{
    ViewBag.Title = "UserCreate";
    Layout = "~/Views/Shared/_LayoutPage4.cshtml";
}
@section scripts
{
    <link href="~/Content/Menu.css" rel="stylesheet" type="text/css" />
    <link href="~/Content/UserEdit.css" rel="stylesheet" type="text/css" />
    <script type="text/javascript">
        $(document).ready(function () {




        })
    </script>

}
@using (Html.BeginForm("UserCreateDB", "Admin2", FormMethod.Post, new { encType = "multipart/form-data" }))
{
    <div class="container">

        <div class="row">
            <div class="col-md-2 mb-2 mt-4">
                <h5>Add User</h5>
            </div>
            <div class="col-md-8 mb-2 mt-4">
            </div>
            <div class="col-md-2 mb-2">
                <label id="lblSave" class="mt-3 fdLabel" style="color:red; font-size: 18px"></label>
            </div>
        </div>



        @* User Infromation*@
        <div class="card mb-3">

            <h5 class="card-header" style="background-color: lightblue">User Details</h5>

            <div class="card-body">

                <div class="row">
                    <div class="col-lg-6">
                        @Html.ValidationSummary(true)
                    </div>
                </div>



                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group mb-2 editDivFormat">
                            @Html.Label("UserName:", htmlAttributes: new { @class = "control-label col-lg-6 lb-sm" })
                            @Html.TextBoxFor(model => model.UserName, htmlAttributes: new { @class = "form-control changeable  form-control-sm" })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group mb-2 editDivFormat">
                            @Html.Label("Password:", htmlAttributes: new { @class = "control-label col-lg-6 lb-sm", @style = "display: block" })
                            @Html.TextBoxFor(model => model.Password, htmlAttributes: new { @class = "form-control changeable  form-control-sm" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>

                    </div>

                </div>



                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group mb-2 editDivFormat" style="white-space: nowrap;">
                            @Html.Label("Last Name:", htmlAttributes: new { @class = "control-label col-lg-6 lb-sm" })
                            @Html.TextBoxFor(model => model.LastName, htmlAttributes: new { @class = "form-control changeable  form-control-sm" })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group mb-2">
                            @Html.Label("First Name:", htmlAttributes: new { @class = "control-label col-lg-6 lb-sm" })
                            @Html.TextBoxFor(m => m.FirstName, htmlAttributes: new { @class = "form-control changeable  form-control-sm" })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-6">
                        <div class="form-group mb-2 editDivFormat">
                            @Html.Label("Active:", htmlAttributes: new { @class = "control-label col-lg-6 lb-sm", @style = "display: block" })
                            @Html.CheckBoxFor(m => m.Active, new { @class = "move-left  changeable   sizeCheckbox" })
                            @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="form-group mb-2 editDivFormat">
                            @Html.Label("Email:", htmlAttributes: new { @class = "control-label col-lg-6 lb-sm" })
                            @Html.TextBoxFor(model => model.EMail, htmlAttributes: new { @class = "form-control changeable  form-control-sm" })
                            @Html.ValidationMessageFor(model => model.EMail, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-2 mt-2">
                        <button type="submit" name="cmdSave" value="Save" class="btn btn-primary btn-sm form-control">Save</button>
                    </div>
                    <div class="col-lg-10 mt-2">
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-2 mt-3">
                        @Html.ActionLink("Go To Users", "Users", "Admin2")
                    </div>
                    <div class="col-lg-9 mt-3">
                    </div>
                </div>

            </div>
            </div>


    </div>

    @Html.HiddenFor(m => m.UserID)
}
